import matplotlib
from mode import *
import torch
from torchmetrics import ConfusionMatrix,ROC,F1Score
from sklearn import metrics
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix

import seaborn as sns
class evaluation_score():
    def f1_score(pred,target):

        targets = torch.tensor(target).long()
        preds = torch.tensor(pred).long()
        f1 = F1Score()
        print(f' [ F1-Score ] : {f1(preds,targets)}')

    def confusion_matrix(pred,target):

        targets = torch.tensor(target).long()
        preds = torch.tensor(pred).long()
        confmat = ConfusionMatrix(num_classes=1,multilabel=True)

        print(f' [ Confusion Matrix ] \n {confmat(preds,targets)}')

        model=confusion_matrix(pred, target)   
        svm=sns.heatmap(model, annot=True, cmap="Blues")
        figure = svm.get_figure()    
        figure.savefig('./Confusion_matrix.png', dpi=400)
        plt.clf()

    def Roc_curve(pred,target):
        targets = torch.tensor(target).long()
        preds = torch.tensor(pred).long()
        roc = ROC(pos_label=1)
        fpr, tpr, thresholds = roc(preds, targets)

        print(f' [ Roc Curve ] \nfpr : {fpr}\ntpr : {tpr}\nthresholds : {thresholds}')

        plt.plot(fpr, tpr)
        plt.xlabel("false positive rate")
        plt.ylabel("true positive rate")
        plt.title("ROC curve")
        plt.savefig("./ROC.png")
        plt.clf()
