from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier

import xgboost as xgb
import os
import sys
import pickle as pkl

class ML_model(object):
    def __init__(self):
        super(ML_model, self).__init__()
        
    def __call__(self, args, model):
        if model == 'LogisticRegression':
            instance = LogisticRegression(solver='lbfgs')
            if args.mode == 'test':
                instance = self.load_model(instance, model)
            return instance
        elif model == 'RandomForestClassifier':
            instance = RandomForestClassifier(64)
            if args.mode == 'test':
                instance = self.load_model(instance, model)
            return instance
        elif model == 'XGBClassifier':
            instance = xgb.XGBClassifier()
            if args.mode == 'test':
                instance = self.load_model(instance, model)
            return instance
    
    def load_model(self, instance, model):
        try:
            with open(f'{model}.pkl', 'rb+') as obj:
                instance = pkl.load(obj)
        except BaseException as e:
            print("cannnot found models")
            sys.exit(-1)
        return instance